#!/usr/bin/env python
PACKAGE = "auc"
import roslib; roslib.load_manifest(PACKAGE)
from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# int_t, float_t, str_t, bool_t 
#'name', 'type', 'level', 'description', 'default', 'min', 'max'
gen.add("logging_vehicle_states", bool_t, 0, "logging_vehicle_states", False)
gen.add("clear_buffer", bool_t, 0, "Clear logging buffer", True)


gen.add("dist_heuristic_cost_scale", double_t, 0, "dist_heuristic_cost_scale", 1.0, 0, 10.0)
gen.add("model_error_weight", double_t, 0, "model_error_weight", 0.0, 0, 10.0)
gen.add("local_map_cost_weight", double_t, 0, "local_map_cost_weight", 0.0, 0, 10.0)


# gen.add("modelbased_pure_puresuit_turn_on", bool_t, 0, "enable Model based Purepursuit", False)

# predictr_type = gen.enum([ gen.const("ThetaGP",      int_t, 0, "A small constant"),
#                        gen.const("CAV",     int_t, 1, "A medium constant"),
#                        gen.const("NMPC",      int_t, 2, "A large constant"),
#                        gen.const("NaiveGP", int_t, 3, "An extra large constant")],
#                      "An enum to set size")

# gen.add("predictor_type", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=predictr_type)

exit(gen.generate(PACKAGE, "auc", "predictorDyn"))